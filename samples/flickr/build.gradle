apply plugin: 'com.android.application'

dependencies {
    compile project(':library')
    compile(project(':recyclerview')) {
        transitive = false
    }

    compile "com.android.support:support-v4:${SUPPORT_V4_VERSION}"
    compile "com.android.support:appcompat-v7:${SUPPORT_V7_VERSION}"
    compile "com.mcxiaoke.volley:library:${VOLLEY_VERSION}"
    compile "com.android.support:recyclerview-v7:${SUPPORT_V7_VERSION}"
}

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION as String

    signingConfigs {
        release {
            storeFile file("keystore")
            storePassword System.getenv("KSTOREPWD")
            keyAlias "flickr_keystore"
            keyPassword System.getenv("KSTOREPWD")
        }
    }

    defaultConfig {
        applicationId 'com.bumptech.glide.samples.flickr'
        minSdkVersion 11 // TODO it uses SearchView (and not the compat one)
        targetSdkVersion TARGET_SDK_VERSION as int

        versionCode 1
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    flavorDimensions "config", "log"

    productFlavors {

        def API_KEY = "API_KEY"
        def SIGNED_API_BASE_URL = "SIGNED_API_BASE_URL"
        def LOGGER_ENABLED = "LOGGER_ENABLED"
        def large_heap_enabled = "large_heap_enabled"
        def app_icon_name = "app_icon_name"

        def BASE_VERSION = "1.0"
        def date = new Date()
        def dateVersion = BASE_VERSION + "." + date.format('yyMMddHHmm')

        qa {
            versionName "qa." + dateVersion
            buildConfigField "String", SIGNED_API_BASE_URL, '"https://qa-api.flickr.com/services"'
            buildConfigField "String", API_KEY, '"f0e6fbb5fdf1f3842294a1d21f84e8a6qa"'
            resValue "bool", large_heap_enabled, 'false'
            resValue "string", app_icon_name, versionName
            dimension = "config"
        }

        staging {
            versionName "st." + dateVersion
            buildConfigField "String", SIGNED_API_BASE_URL, '"https://stage-api.flickr.com/services"'
            buildConfigField "String", API_KEY, '"f0e6fbb5fdf1f3842294a1d21f84e8a6staging"'
            resValue "bool", large_heap_enabled, 'false'
            resValue "string", app_icon_name, versionName
            dimension = "config"
        }

        production {
            versionName "Glide Flickr Demo"
            buildConfigField "String", SIGNED_API_BASE_URL, '"https://api.flickr.com/services"'
            buildConfigField "String", API_KEY, '"f0e6fbb5fdf1f3842294a1d21f84e8a6"'
            resValue "bool", large_heap_enabled, 'true'
            resValue "string", app_icon_name, versionName
            dimension = "config"
        }

        logEnabled {
            dimension = "log"
            buildConfigField "boolean", LOGGER_ENABLED, 'true'
        }

        logDisabled {
            dimension = "log"
            buildConfigField "boolean", LOGGER_ENABLED, 'false'
        }
    }
}

task run(type: Exec, dependsOn: 'installDebug') {
    description 'Installs the APK and runs the main activity: "gradlew :samples:???:run"'
    commandLine "${android.sdkDirectory}/platform-tools/adb", 'shell', 'am', 'start', '-n', 'com.bumptech.glide.samples.flickr/.FlickrSearchActivity'
}
